/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.view;

import com.controller.DateValidator;
import com.controller.DateValidatorUsingDateFormat;
import com.model.FileOperations;
import com.model.InvoiceHeader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ArFz
 */
public class App extends javax.swing.JFrame {
    
    static ArrayList<InvoiceHeader> invoiceHeader = null;
    DefaultTableModel modelinvoicesTable;
    DefaultTableModel modelinvoiceItem;
    EditItems editItemFrame;
    NewInvoice newInvoiceFrame;
    
    /**
     * Creates new form main
     */
    public App() {
        initComponents();
        
        modelinvoicesTable = (DefaultTableModel) invoicesTable.getModel();
        modelinvoiceItem = (DefaultTableModel) invoiceItem.getModel();
        editItemFrame = new EditItems();
        newInvoiceFrame = new NewInvoice();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoicesTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceItem = new javax.swing.JTable();
        delete_invoice_btn = new javax.swing.JButton();
        create_new_invoice_btn = new javax.swing.JButton();
        invoice_number_lable = new javax.swing.JLabel();
        invoice_date_lable = new javax.swing.JLabel();
        customer_name_lable = new javax.swing.JLabel();
        invoice_total_lable = new javax.swing.JLabel();
        invoice_number = new javax.swing.JLabel();
        invoice_date = new javax.swing.JTextField();
        customer_name = new javax.swing.JTextField();
        invoice_total = new javax.swing.JLabel();
        edit_items_btn = new javax.swing.JButton();
        save_btn = new javax.swing.JButton();
        delete_item_btn = new javax.swing.JButton();
        refresh_btn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        file_menu = new javax.swing.JMenu();
        load_file_menu_item = new javax.swing.JMenuItem();
        save_file_menu_item = new javax.swing.JMenuItem();
        about_menu = new javax.swing.JMenu();
        instagram = new javax.swing.JMenuItem();
        twitter = new javax.swing.JMenuItem();
        email = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sales Invoice Generator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setToolTipText("ahmed");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Invoices table");

        invoicesTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        invoicesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Date", "Customer", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoicesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoicesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(invoicesTable);
        if (invoicesTable.getColumnModel().getColumnCount() > 0) {
            invoicesTable.getColumnModel().getColumn(0).setPreferredWidth(7);
            invoicesTable.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Invoice Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(442, 422));

        invoiceItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Item Name", "Item Price", "Quantity", "Total"
            }
        ));
        jScrollPane2.setViewportView(invoiceItem);
        if (invoiceItem.getColumnModel().getColumnCount() > 0) {
            invoiceItem.getColumnModel().getColumn(0).setPreferredWidth(18);
            invoiceItem.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
        );

        delete_invoice_btn.setText("Delete Invoice");
        delete_invoice_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_invoice_btnActionPerformed(evt);
            }
        });

        create_new_invoice_btn.setText("Create New Invoice");
        create_new_invoice_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create_new_invoice_btnActionPerformed(evt);
            }
        });

        invoice_number_lable.setText("Invoice Number");
        invoice_number_lable.setToolTipText("");

        invoice_date_lable.setText("Invoice Date");
        invoice_date_lable.setPreferredSize(new java.awt.Dimension(80, 14));

        customer_name_lable.setText("Customer Name");
        customer_name_lable.setPreferredSize(new java.awt.Dimension(80, 14));

        invoice_total_lable.setText("Invoice Total");
        invoice_total_lable.setPreferredSize(new java.awt.Dimension(80, 14));

        invoice_number.setText("   #");
        invoice_number.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        invoice_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoice_dateActionPerformed(evt);
            }
        });

        customer_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_nameActionPerformed(evt);
            }
        });

        invoice_total.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        edit_items_btn.setText("Edit Items");
        edit_items_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_items_btnActionPerformed(evt);
            }
        });

        save_btn.setText("Save");
        save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_btnActionPerformed(evt);
            }
        });

        delete_item_btn.setText("Delete Item");
        delete_item_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_item_btnActionPerformed(evt);
            }
        });

        refresh_btn.setText("Refresh");
        refresh_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_btnActionPerformed(evt);
            }
        });

        jMenuBar1.setPreferredSize(new java.awt.Dimension(56, 30));

        file_menu.setText("File");
        file_menu.setPreferredSize(new java.awt.Dimension(40, 19));

        load_file_menu_item.setText("Load File");
        load_file_menu_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_file_menu_itemActionPerformed(evt);
            }
        });
        file_menu.add(load_file_menu_item);

        save_file_menu_item.setText("Save File");
        save_file_menu_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_file_menu_itemActionPerformed(evt);
            }
        });
        file_menu.add(save_file_menu_item);

        jMenuBar1.add(file_menu);

        about_menu.setText("About");

        instagram.setText("Instgram");
        instagram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instagramActionPerformed(evt);
            }
        });
        about_menu.add(instagram);

        twitter.setText("Twitter");
        twitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twitterActionPerformed(evt);
            }
        });
        about_menu.add(twitter);

        email.setText("Email");
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        about_menu.add(email);

        jMenuBar1.add(about_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(create_new_invoice_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete_invoice_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(edit_items_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(invoice_number_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(invoice_number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(invoice_total_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(invoice_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoice_date_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(customer_name_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(invoice_date)
                                    .addComponent(customer_name))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoice_number_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoice_number, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoice_date_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoice_date, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customer_name_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customer_name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invoice_total_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invoice_total, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_invoice_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(create_new_invoice_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_items_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete_item_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void load_file_menu_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_file_menu_itemActionPerformed
        
        FileOperations f = new FileOperations();
        invoiceHeader = f.readFile();
        float total = 0;
        
        if(invoiceHeader != null){
            
            for(int i = 0 ; i < invoiceHeader.size(); i++){
                
                for(int j = 0 ; j < invoiceHeader.get(i).getInvoiceLines().size(); j++){
                    total += (float)invoiceHeader.get(i).getInvoiceLines().get(j).getItemPrice() * invoiceHeader.get(i).getInvoiceLines().get(j).getQuantity(); 
                }
                
                modelinvoicesTable.insertRow(modelinvoicesTable.getRowCount(),
                                             new Object[]{invoiceHeader.get(i).getInvoiceNum(),
                                                          invoiceHeader.get(i).getInvoiceDate(),
                                                          invoiceHeader.get(i).getCustomerName(),
                                                          total});
                total = 0;
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Plz, restart the app and select a right files", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_load_file_menu_itemActionPerformed

    private void create_new_invoice_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create_new_invoice_btnActionPerformed
        
        int index = modelinvoicesTable.getRowCount();
        
        
        if(invoiceHeader != null){
            newInvoiceFrame.setIndex(index+1);

            newInvoiceFrame.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "You Should Load Files First", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_create_new_invoice_btnActionPerformed

    private void save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_btnActionPerformed
        
        String invoiceDate =  invoice_date.getText();
        String customerName = customer_name.getText();
        
        int index = invoicesTable.getSelectedRow();
        
        DateValidator validator = new DateValidatorUsingDateFormat("dd/MM/yyyy");

        if(validator.isValid(invoiceDate)){
            
            invoiceHeader.get(index).setCustomerName(customerName);
            invoiceHeader.get(index).setInvoiceDate(invoiceDate);
            
            printInvoicesTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "The Format of Date is invalid", "Error", JOptionPane.ERROR_MESSAGE);
            invoiceDate = invoiceHeader.get(index).getInvoiceDate();
            customerName = invoiceHeader.get(index).getCustomerName();
        }
        
        invoice_date.setText(invoiceDate);
        customer_name.setText(customerName);
           
    }//GEN-LAST:event_save_btnActionPerformed

    private void delete_item_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_item_btnActionPerformed
        
        int index = invoicesTable.getSelectedRow();
        int itemNum = invoiceItem.getSelectedRow();
        
        if(itemNum != -1){
            int result = JOptionPane.showConfirmDialog(null, "Do you want to confirm the deletion?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if(result == 0){
                
                invoiceHeader.get(index).getInvoiceLines().remove(itemNum);
                
                printInvoiceItem();
                
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "You Should Select Item First", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_delete_item_btnActionPerformed

    private void edit_items_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_items_btnActionPerformed
        
        int index = invoicesTable.getSelectedRow();
        
        if(index != -1){
            
            editItemFrame.setInvoiceLine(invoiceHeader.get(index).getInvoiceLines(), index);
            editItemFrame.setVisible(true);
            
        }
        else{
            JOptionPane.showMessageDialog(null, "You Should Select Invoice First", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_edit_items_btnActionPerformed

    private void delete_invoice_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_invoice_btnActionPerformed
        
        int index = invoicesTable.getSelectedRow();
        
        if(index != -1){
            int result = JOptionPane.showConfirmDialog(null, "Do you want to confirm the deletion?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if(result == 0){
                
                invoiceHeader.remove(index);
                
                printInvoicesTable();
                
                invoice_number.setText("   #");
                invoice_date.setText("");
                customer_name.setText("");
                invoice_total.setText("");
                
                int rows = modelinvoiceItem.getRowCount();
                for(int i = rows - 1; i >= 0 ; i--){
                    modelinvoiceItem.removeRow(i);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "You Should Select Invoice First", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_delete_invoice_btnActionPerformed

    private void save_file_menu_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_file_menu_itemActionPerformed
        
        String invoiceHeaderName = "InvoiceHeader"; 
        String invoiceLineName = "InvoiceLine";
        
    }//GEN-LAST:event_save_file_menu_itemActionPerformed

    private void invoice_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoice_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoice_dateActionPerformed

    private void customer_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_nameActionPerformed

    private void instagramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instagramActionPerformed
        
        JOptionPane.showMessageDialog(null, "Insta : ahmed.farag57");
        
    }//GEN-LAST:event_instagramActionPerformed

    private void twitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twitterActionPerformed
        
        JOptionPane.showMessageDialog(null, "Twitter : @AhmedFarag_57");
        
    }//GEN-LAST:event_twitterActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        
        JOptionPane.showMessageDialog(null, "Email : ahmadfarag1956@gmail.com");
        
    }//GEN-LAST:event_emailActionPerformed

    private void invoicesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoicesTableMouseClicked
        
        if(invoiceHeader != null){
        
            int index = invoicesTable.getSelectedRow();

            invoice_number.setText("   " + Integer.toString(invoiceHeader.get(index).getInvoiceNum()));
            invoice_date.setText(invoiceHeader.get(index).getInvoiceDate());
            customer_name.setText(invoiceHeader.get(index).getCustomerName());
            
            float total = 0;
            
            for(int j = 0 ; j < invoiceHeader.get(index).getInvoiceLines().size(); j++){
                    total += (float)invoiceHeader.get(index).getInvoiceLines().get(j).getItemPrice() * invoiceHeader.get(index).getInvoiceLines().get(j).getQuantity(); 
                }
            
            invoice_total.setText(Float.toString(total));
            
            //invoice_number.setText(modelinvoicesTable.getValueAt(index, 0).toString());
            //invoice_date.setText(modelinvoicesTable.getValueAt(index, 1).toString());
            //customer_name.setText(modelinvoicesTable.getValueAt(index, 2).toString());
            
            // to remove all rows in "Invoice Item"
            int rows = modelinvoiceItem.getRowCount();
            for(int j = rows - 1 ; j >= 0 ; j--){
                modelinvoiceItem.removeRow(j);
            }
            
            
            for(int i = 0 ; i < invoiceHeader.get(index).getInvoiceLines().size(); i++){
                modelinvoiceItem.insertRow(modelinvoiceItem.getRowCount(),
                                       new Object[]{i+1,
                                                    invoiceHeader.get(index).getInvoiceLines().get(i).getItemName(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(i).getItemPrice(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(i).getQuantity(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(i).getItemPrice()*
                                                    invoiceHeader.get(index).getInvoiceLines().get(i).getQuantity()});
            }
            

        }
        else {
            
        }
    }//GEN-LAST:event_invoicesTableMouseClicked

    private void refresh_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_btnActionPerformed
        
        if(invoiceHeader != null){
            printInvoicesTable();
        }
        
    }//GEN-LAST:event_refresh_btnActionPerformed
    
    private void printInvoicesTable(){
        
        int rows = modelinvoicesTable.getRowCount();
        for(int k = rows - 1 ; k >= 0 ; k--){
            modelinvoicesTable.removeRow(k);
        }

        float total = 0;
        
        for(int i = 0 ; i < invoiceHeader.size(); i++){
                
                for(int j = 0 ; j < invoiceHeader.get(i).getInvoiceLines().size(); j++){
                    total += (float)invoiceHeader.get(i).getInvoiceLines().get(j).getItemPrice() * invoiceHeader.get(i).getInvoiceLines().get(j).getQuantity(); 
                }
                
                modelinvoicesTable.insertRow(modelinvoicesTable.getRowCount(),
                                             new Object[]{invoiceHeader.get(i).getInvoiceNum(),
                                                          invoiceHeader.get(i).getInvoiceDate(),
                                                          invoiceHeader.get(i).getCustomerName(),
                                                          total});
                total = 0;
            }
    }
    
    private void printInvoiceItem(){
        
        int rows = modelinvoiceItem.getRowCount();
        for(int i = rows - 1; i >= 0 ; i--){
            modelinvoiceItem.removeRow(i);
        }
        
        int index = invoicesTable.getSelectedRow();
        
        float total = 0;
        
        for(int j = 0 ; j < invoiceHeader.get(index).getInvoiceLines().size(); j++){
                modelinvoiceItem.insertRow(modelinvoiceItem.getRowCount(),
                                       new Object[]{j+1,
                                                    invoiceHeader.get(index).getInvoiceLines().get(j).getItemName(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(j).getItemPrice(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(j).getQuantity(),
                                                    invoiceHeader.get(index).getInvoiceLines().get(j).getItemPrice()*
                                                    invoiceHeader.get(index).getInvoiceLines().get(j).getQuantity()});
            }
        
        for(int k = 0 ; k < invoiceHeader.get(index).getInvoiceLines().size(); k++){
            total += (float)invoiceHeader.get(index).getInvoiceLines().get(k).getItemPrice()*invoiceHeader.get(index).getInvoiceLines().get(k).getQuantity();
        }
        
        invoice_total.setText(Float.toString(total));
        modelinvoicesTable.setValueAt(total, index, 3);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about_menu;
    private javax.swing.JButton create_new_invoice_btn;
    private javax.swing.JTextField customer_name;
    private javax.swing.JLabel customer_name_lable;
    private javax.swing.JButton delete_invoice_btn;
    private javax.swing.JButton delete_item_btn;
    private javax.swing.JButton edit_items_btn;
    private javax.swing.JMenuItem email;
    private javax.swing.JMenu file_menu;
    private javax.swing.JMenuItem instagram;
    private javax.swing.JTable invoiceItem;
    private javax.swing.JTextField invoice_date;
    private javax.swing.JLabel invoice_date_lable;
    private javax.swing.JLabel invoice_number;
    private javax.swing.JLabel invoice_number_lable;
    private javax.swing.JLabel invoice_total;
    private javax.swing.JLabel invoice_total_lable;
    private javax.swing.JTable invoicesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem load_file_menu_item;
    private javax.swing.JButton refresh_btn;
    private javax.swing.JButton save_btn;
    private javax.swing.JMenuItem save_file_menu_item;
    private javax.swing.JMenuItem twitter;
    // End of variables declaration//GEN-END:variables
}
